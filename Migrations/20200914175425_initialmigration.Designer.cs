// <auto-generated />
using MagicTheGatheringFinal.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MagicTheGatheringFinal.Migrations
{
    //[DbContext(typeof(MagicDbContext))]
    [Migration("20200914175425_initialmigration")]
    partial class initialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MagicTheGatheringFinal.Context.CardsTable", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("id");

                    b.ToTable("cardsTable");
                });

            modelBuilder.Entity("MagicTheGatheringFinal.Context.DeckTable", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserTableId")
                        .HasColumnType("int");

                    b.Property<int>("cardId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("UserTableId");

                    b.HasIndex("cardId");

                    b.ToTable("decksTable");
                });

            modelBuilder.Entity("MagicTheGatheringFinal.Context.QuizTable", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("word")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("quizTable");
                });

            modelBuilder.Entity("MagicTheGatheringFinal.Context.UserTable", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("playertype")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("usersTable");
                });

            modelBuilder.Entity("MagicTheGatheringFinal.Context.DeckTable", b =>
                {
                    b.HasOne("MagicTheGatheringFinal.Context.UserTable", "UserTable")
                        .WithMany()
                        .HasForeignKey("UserTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MagicTheGatheringFinal.Context.CardsTable", "CardsTable")
                        .WithMany()
                        .HasForeignKey("cardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
